name: Deploy Production
description: Deploy to Firebase Hosting or Functions on merge

inputs:
  deploy:
    description: "Target to deploy: 'hosting' or 'functions'"
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4

    - name: Build project
      run: npm ci && npm ci --prefix apps/functions && npm run build
      shell: bash

    - name: Inject prod environment
      run: |
        echo "export const environment = {
          production: true,
          firebase: {
            apiKey: '${{ secrets.FIREBASE_API_KEY }}',
            authDomain: '${{ secrets.FIREBASE_AUTH_DOMAIN }}',
            projectId: 'portfolio-mikepawlak',
            storageBucket: '${{ secrets.FIREBASE_STORAGE_BUCKET }}',
            messagingSenderId: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}',
            appId: '${{ secrets.FIREBASE_APP_ID }}',
            measurementId: '${{ secrets.FIREBASE_MEASUREMENT_ID }}'
          },
          useEmulator: false
        };" > apps/web/src/environments/environment.prod.ts
      shell: bash

    - name: Deploy Hosting
      if: ${{ inputs.deploy == 'hosting' }}
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: ${{ secrets.GITHUB_TOKEN }}
        firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PORTFOLIO_MIKEPAWLAK }}
        channelId: live
        projectId: portfolio-mikepawlak

    - name: Deploy Functions
      if: ${{ inputs.deploy == 'functions' }}
      uses: joinflux/firebase-tools@v14.6.0
      with:
        args: deploy --only functions --project portfolio-mikepawlak
      env:
        GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
