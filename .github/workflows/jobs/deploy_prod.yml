name: Deploy to Firebase (Prod)
on:
  workflow_call:
    inputs:
      deploy:
        required: true
        type: string
    secrets:
      FIREBASE_SERVICE_ACCOUNT_PORTFOLIO_MIKEPAWLAK: {}
      GITHUB_TOKEN: {}
      GCP_SA_KEY: {}
      FIREBASE_API_KEY: {}
      FIREBASE_AUTH_DOMAIN: {}
      FIREBASE_STORAGE_BUCKET: {}
      FIREBASE_MESSAGING_SENDER_ID: {}
      FIREBASE_APP_ID: {}
      FIREBASE_MEASUREMENT_ID: {}

jobs:
  deploy_hosting:
    if: ${{ inputs.deploy == 'hosting' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: npm ci && npm ci --prefix apps/functions && npm run build
      - name: Inject secrets into environment.prod.ts
        run: |
          echo "export const environment = {
            production: true,
            firebase: {
              apiKey: '${{ secrets.FIREBASE_API_KEY }}',
              authDomain: '${{ secrets.FIREBASE_AUTH_DOMAIN }}',
              projectId: 'portfolio-mikepawlak',
              storageBucket: '${{ secrets.FIREBASE_STORAGE_BUCKET }}',
              messagingSenderId: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}',
              appId: '${{ secrets.FIREBASE_APP_ID }}',
              measurementId: '${{ secrets.FIREBASE_MEASUREMENT_ID }}'
            },
            useEmulator: false
          };" > apps/web/src/environments/environment.prod.ts
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PORTFOLIO_MIKEPAWLAK }}
          channelId: live
          projectId: portfolio-mikepawlak

  deploy_functions:
    if: ${{ inputs.deploy == 'functions' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: joinflux/firebase-tools@v14.6.0
        with:
          args: deploy --only functions --project portfolio-mikepawlak
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
